{"version":3,"sources":["Components/dialogs/DialogsElement.jsx","Components/dialogs/DialogsElementChat.jsx","Components/dialogs/Dialogs.jsx","Components/dialogs/DialogsContainer.jsx"],"names":["DialogsElement","props","react_default","a","createElement","react_router_dom","to","id","className","name","DialogsElementChat","react_router","path","element","text","maxLengthThirty","maxLengthCreator","Textarea","FormControl","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","requiredField","component","placeholder","Dialogs","dialogsEl","dialogsPage","dialogsItem","map","d","dialogs_DialogsElement","key","dialogsMessages","messages","dialogs_DialogsElementChat","message","values","sendMessage","newMessageBody","compose","withAuthRedirect","connect","state","dialogs_Dialogs"],"mappings":"gOAWeA,UAPM,SAACC,GAClB,OACQC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAI,YAAcL,EAAMM,GAAIC,UAAU,iBAAiBP,EAAMQ,yBCQpEC,EATU,SAACT,GACtB,OACIC,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,KAAM,IAAMX,EAAMM,GAAIM,QAASX,EAAAC,EAAAC,cAAA,WAAMH,EAAMa,kBCAxDC,EAAkBC,YAAiB,IA4BnCC,EAAWC,YAAY,YAWvBC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,CAVL,SAACnB,GACpB,OACIC,EAAAC,EAAAC,cAAA,QAAMkB,SAAUrB,EAAMsB,cAClBrB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBAAoBN,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAeX,GAAkBY,UAAWV,EAAUR,KAAK,iBAAiBmB,YAAY,wBAC7I1B,EAAAC,EAAAC,cAAA,UAAQI,UAAU,uBAAlB,YAMDqB,EAvCD,SAAC5B,GACX,IAAI6B,EAAY7B,EAAM8B,YAAYC,YAAYC,IAAI,SAAAC,GAAC,OAAIhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAgB1B,KAAMyB,EAAEzB,KAAM2B,IAAKF,EAAE3B,GAAIA,GAAI2B,EAAE3B,OAClG8B,EAAkBpC,EAAM8B,YAAYO,SAASL,IAAI,SAAAC,GAAC,OAAIhC,EAAAC,EAAAC,cAACmC,EAAD,CAAoBhC,GAAI2B,EAAE3B,GAAI6B,IAAKF,EAAE3B,GAAIO,KAAMoB,EAAEM,YAK3G,OAEQtC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,UACK0B,IAGT5B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACPN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACN6B,IAGjBnC,EAAAC,EAAAC,cAACe,EAAD,CAAqBG,SAlBf,SAACmB,GACnBxC,EAAMyC,YAAYD,EAAOE,gBACzBF,EAAOE,eAAiB,0CCsCjBC,sBACXC,IACAC,YATkB,SAACC,GACnB,MAAO,CACHhB,YAAagB,EAAMhB,cAOG,CAACW,kBAFhBE,CAbW,SAAC3C,GACvB,OACIC,EAAAC,EAAAC,cAAC4C,EAAa/C","file":"static/js/2.1fb386e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport './dialogsElement.css';\r\n\r\nlet DialogsElement = (props) => {\r\n    return(\r\n            <li><Link to={'/dialogs/' + props.id} className=\"dialogs__name\">{props.name}</Link></li>\r\n    );\r\n\r\n}\r\n\r\nexport default DialogsElement;","import React from \"react\";\r\nimport './dialogsElementChat.css';\r\nimport {Route, Routes} from 'react-router-dom';\r\n\r\n\r\nlet DialogsElementChat = (props) => {\r\n    return (\r\n        <Routes>\r\n            <Route path={'/' + props.id} element={<div>{props.text}</div>}/>\r\n        </Routes>\r\n        \r\n    );\r\n}\r\n\r\nexport default DialogsElementChat;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { FormControl } from \"../FormsControls/FormsControls\";\r\nimport './dialogs.css';\r\nimport DialogsElement from './DialogsElement';\r\nimport DialogsElementChat from './DialogsElementChat';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators';\r\n\r\nconst maxLengthThirty = maxLengthCreator(30)\r\nlet Dialogs = (props) => {    \r\n    let dialogsEl = props.dialogsPage.dialogsItem.map(d => <DialogsElement name={d.name} key={d.id} id={d.id} /> )\r\n    let dialogsMessages = props.dialogsPage.messages.map(d => <DialogsElementChat id={d.id} key={d.id} text={d.message}/>)\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n        values.newMessageBody = '';\r\n    }\r\n    return ( \r\n        \r\n            <div className=\"dialogs\">\r\n                <div className=\"dialogs__items\">\r\n                    <div className=\"dialogs__itemNames\">\r\n                        <ul>\r\n                            {dialogsEl}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"dialogs__itemChats\">\r\n                            <div className=\"dialogs__messages\">\r\n                                    {dialogsMessages}\r\n                            </div>\r\n                    </div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\nconst Textarea = FormControl('textarea')\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"dialogs__form\">\r\n                <div className=\"dialogs__textarea\"><Field validate={[requiredField, maxLengthThirty]} component={Textarea} name='newMessageBody' placeholder=\"enter your message\"/></div>\r\n                <button className=\"dialogs__addMessage\">Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm)\r\nexport default Dialogs;","import './dialogs.css';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessage} from '../../redux/dialogsReducer';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\r\nimport React from 'react'\r\nimport { compose } from 'redux';\r\n\r\n// let DialogsContainer = (props) => {    \r\n\r\n    \r\n    \r\n//     return ( \r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let dialogsEl = store.getState().dialogsPage.dialogsItem.map(d => <DialogsElement name={d.name} id={d.id} /> )\r\n//                     // let dialogsMessages = messages.map(m => <Route path={'/'+ m.id} element={<DialogsElementChat  text={m.message}/>}/>)\r\n//                     let dialogsMessages = store.getState().dialogsPage.messages.map(d => <DialogsElementChat id={d.id} text={d.message}/>)\r\n//                     let newMessageBody = store.getState().dialogsPage.newMessageBody;\r\n//                     let onNewMessageChange = (body) => {\r\n//                         store.dispatch(updateNewMessageActionCreator(body)) \r\n//                     }\r\n//                     let onSendMessageClick = (body) => {\r\n//                         store.dispatch(sendMessageActionCreator(body));\r\n//                     }\r\n//                     return (\r\n//                         <Dialogs dialogsEl={dialogsEl} dialogsMessages={dialogsMessages} newMessageBody={newMessageBody}\r\n//                         onNewMessageChange={onNewMessageChange} onSendMessageClick={onSendMessageClick} />\r\n//                     )\r\n//                 }\r\n                \r\n//             }\r\n            \r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }/\r\n\r\n\r\nlet DialogsContainerAPI = (props) => {\r\n    return (\r\n        <Dialogs  {...props} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect, \r\n    connect (mapStateToProps, {sendMessage}),\r\n)(DialogsContainerAPI);"],"sourceRoot":""}